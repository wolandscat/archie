
//the generated ANTLR sources plus the OpenEHR Test RM implementation do not need coverage
def excludedPaths = ["**/nedap/archie/adlparser/antlr**", "**/nedap/archie/openehrtestrm/**"]

allprojects {
  apply plugin: 'jacoco'
}

subprojects {
  jacoco {
    toolVersion = "0.8.2"
  }

  test {
     testLogging {
        events "failed"
        exceptionFormat "full"
    }
  }

  jacocoTestReport {
      reports {
          xml.enabled = true
          html.enabled = true
      }
      additionalSourceDirs.from = sourceSets.main.allSource.srcDirs
      sourceDirectories.from = sourceSets.main.allSource.srcDirs
      classDirectories.from =  sourceSets.main.output
      afterEvaluate {
        classDirectories.from = classDirectories.files.collect {
           fileTree(dir: it, excludes: excludedPaths)
        }
      }
  }

  check.dependsOn jacocoTestReport
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs.from = subprojects.sourceSets.main.allSource.srcDirs
    sourceDirectories.from = subprojects.sourceSets.main.allSource.srcDirs
    classDirectories.from =  subprojects.sourceSets.main.output
    executionData.from = subprojects.findAll {!it.sourceSets.test.java.isEmpty()}.jacocoTestReport.executionData
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }

    afterEvaluate {
      classDirectories.from = files(classDirectories.files.collect {
         fileTree(dir: it, excludes:  excludedPaths)
      })
    }
}
